sampling_pos_min_max: [[-7.0 , 7.0],   #x
                       [-7.0 , 7.0],      #y
                       [-7.0 , 7.0]]  #z
                          
                          
sampling_vel_min_max: [[-10.0 , 10.0],  #x
                       [-10.0 , 10.0],      #y
                       [-10.0 , 10.0]]  #z
                    

#distance = pos_scale* pos_distance + att_scale * quat_distance + vel_scale * vel_distance + omega_scale * rate_distance
pos_scale: 1.0
att_scale: 15.0
vel_scale: 1.0
omega_scale: 1.0      
#maximal distance in quaternions is 2.0!!!!!

logfile: results.log

randomize_p_around: 1.3
randomize_v_around: 5.0
randomize_w_around: 5.0
randomize_q_angle_around: 0.08
scale_randomization_goal_bias: 0.5

#1.0 value means the expansion of the tree is break if node.time + max_acc_time_to_gate  > primitive.time
scale_tree_expansion_break_lowerbound: 1.5

reaching_gate_time_ratio_to_pmm: 1.05

# racing high begin
# check_collisions: true
# map: maps/racing.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [7.0, -8.5, 2]
#   velocity: [0 , 0 , 0]
# end:
#   position: [0.0, -2.0, 2.5]
#   velocity: [0 , 0 , 0]
# gates: [[7.0,-6.0, 2.0],[7.0, 1.71, 2.0], [-1.0, 4.7, 1.5], [-6.0, -6.0, 1.5], [-6.0, -6.0, 4.0]]
# gates_orientations: [90, 90, 90, 180, -90, 90, 0]
# racing end

# racing-mid begin
# check_collisions: true
# map: maps/racing.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [7.0, -8.5, 2]
#   velocity: [0 , 0 , 0]
# end:
#   position: [-6.0, -6.0, 1.5]
#   velocity: [0 , 0 , 0]
# gates: [[7.0,-6.0, 2.0],[7.0, 1.71, 2.0], [-1.0, 4.7, 2.0]]
# gates_orientations: [90, 90, 90, -180, -90]
#racing mid end

check_collisions: true
map: maps/racing.ply.npy
map_type: ESDF
min_clearance: 0.17
start:
  position: [-1.0,4.7,2.0]
  velocity: [0, 0.0, 0.0]
end:
  position: [-6.0, -6.0, 1.5]
  velocity: [0 , 0 , 0]
gates: []
gates_orientations: [180, -90]

# racing low begin
# check_collisions: true
# map: maps/racing.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [2.35, 7.61, 2.0]
#   velocity: [0 , 0 , 0]
# end:
#   position: [-6.0, -6.0, 4.0]
#   velocity: [0 , 0 , 0]
# gates: [[-1.0, 4.7, 2.0]]
# gates_orientations: [-135, -180, -90]
#racing low end

# maze low begin
# check_collisions: true
# map: maps/maze.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [-4.2, 15, 2.5]
#   velocity: [0 , 0 , 0]
# end:
#   position: [-4.2, -10.5, 2.5]
#   velocity: [0 , 0 , 0]
# # gates: [[-1.0, 4.7, 2.0]]
# gates_orientations: [-90, -90]
# maze low end

# maze mid begin
# check_collisions: true
# map: maps/maze.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [-0.6, 15.0, 2.5]
#   velocity: [0 , 0 , 0]
# end:
#   position: [7.0, -12.0, 2.5]
#   velocity: [0 , 0 , 0]
# # gates: [[-1.0, 4.7, 2.0]]
# gates_orientations: [-90, -60]
# maze mid end

# maze high begin
# check_collisions: true
# map: maps/maze.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [7.0, -12.0, 2.5]
#   velocity: [0 , 0 , 0]
# end:
#   position: [10.5, 5.4, 2.5]
#   velocity: [0 , 0 , 0]
# gates: [[-0.7, 2.5, 2.5]]
# gates_orientations: [120, 70, 0]
# maze high end

# forest-low begin
# check_collisions: true
# map: maps/forest-low.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [-14.0, -14.0, 2.0]
#   velocity: [0 , 0 , 0]
# end:
#   position: [14.0, 14.0 , 2.0]
#   velocity: [0 , 0 , 0]
# gates: []
# gates_orientations: [45, 45]
# forest-low end

# forest-mid begin
# check_collisions: true
# map: maps/forest-mid.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [-10, 12.5, 2.0]
#   velocity: [0 , 0 , 0]
# end:
#   position: [10, -12.5 , 2.0]
#   velocity: [0 , 0 , 0]
# gates: []
# gates_orientations: [-51.3, -51.3]
# forest-mid end

# forest-high begin
# check_collisions: true
# map: maps/forest-high.ply.npy
# map_type: ESDF
# min_clearance: 0.17
# start:
#   position: [-14, 14.0, 2.0]
#   velocity: [0 , 0 , 0]
# end:
#   position: [14, -14.0 , 2.0]
#   velocity: [0 , 0 , 0]
# gates: []
# gates_orientations: [-45, -45]
# forest-high end


enforce_end_velocity: False
equalize_openlist_sizes: False
  
pos_tolerance_diameter: 0.5
end_vel_distance_tolerance: 4.0

  
goal_bias: 0.07

max_num_iterations: 5000000
max_num_iterations_wo_impr: 200000
desired_num_reference_samples: 20000.0
rotation_sample_mult_ratio: 50.0

desired_dt: 0.004

#reference commands randomization
max_expand_time: 1.2
ref_time_deviation: 0.4 #time deviation of 1.0*reference of rotation and max-acc
ref_time_deviation_goal_bias: 0.05

rand_rotate_rotation_vector_ang: 0.2
rand_rotate_rotation_vector_ang_goal_bias: 0.05

max_dist_from_reference: 3.0

bias_start_from_previous_gate: 0.1 #how ofter to start from some of the nodes reaching 
bias_use_reference_reach_gate_commands: 0.1 #how often to use the commands that reached the current gate

#distance where to search for the best node around the random created
dv: 1.30   
#dv: 3.00   
#distance considered for creation new witness
#ds: 1.50
ds: 0.50


#topological PRM Parameters
cutoof_distance_ratio_to_shortest: 1.05 #what is the ration of length compared to shortest, when paths are not considered
ellipse_ratio_major_axis_focal_length: 1.25 # ratio between length of 2 major axis and focal length
collision_distance_check: 0.17
num_samples_between_gate: 400
